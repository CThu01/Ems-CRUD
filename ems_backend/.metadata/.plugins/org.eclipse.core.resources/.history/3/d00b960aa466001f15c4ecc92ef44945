package com.ems.backend.model.dto.mapper;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.ems.backend.model.dto.request.EmployeeDto;
import com.ems.backend.model.dto.response.EmployeeDtoResponse;
import com.ems.backend.model.entity.Employee;
import com.ems.backend.model.entity.Position;
import com.ems.backend.model.repo.DepartmentRepo;
import com.ems.backend.model.repo.EmployeeRepo;
import com.ems.backend.model.repo.PositionRepo;
import com.ems.backend.util.exception.ApiBusinessException;

@Service
public class EmployeeMapper {

	private DepartmentRepo departmentRepo;
	private PositionRepo positionRepo;
	
	@Value("${ems.file.folder}")
	private String fileDirectory;
	
	@Autowired
	public EmployeeMapper(DepartmentRepo departmentRepo,PositionRepo positionRepo) {
		this.departmentRepo = departmentRepo;
		this.positionRepo = positionRepo;
	}
	
	public Employee mapToEmployee(EmployeeDto employeeDto) {
		
		
		return new Employee(
					employeeDto.getUsername(),
					employeeDto.getSalary(),
					employeeDto.getAddress(),
					employeeDto.getPassport(),
					new Date().getTime(),
					Long.valueOf(employeeDto.getDob()),
					employeeDto.getImage(),
					departmentRepo.findById(employeeDto.getDepartment()).orElseThrow(() -> new ApiBusinessException(null)),
					positionRepo.findById(employeeDto.getPosition()).orElseThrow(() -> new ApiBusinessException(null))
				);  
	}
	
	public EmployeeDtoResponse mapToEmployeeDtoResponse(Employee employee) {
		
		Path employeeDirPath = Path.of(fileDirectory + employee.getId());
		
		if(Files.exists(employeeDirPath) && Files.isDirectory(employeeDirPath)) {
			
		}
		
		return new EmployeeDtoResponse(
					employee.getUsername(),
					employee.getSalary().toString(),
					employee.getAddress(),
					employee.getPassport(),
					employee.getDob().toString(),
					employee.getImage(),
					employee.getDepartment().getName(),
					employee.getPosition_id().getName()
				);
	}
	
	private String ecodedFileToBase64(Path path) {
		
	}
}
