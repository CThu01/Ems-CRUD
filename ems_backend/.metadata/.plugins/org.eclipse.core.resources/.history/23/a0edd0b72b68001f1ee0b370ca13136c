package com.ems.backend.service.listener;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import com.ems.backend.model.dto.request.HistoryEmployeeDelete;
import com.ems.backend.model.dto.request.HistoryEmployeeEvent;
import com.ems.backend.model.entity.Employee;
import com.ems.backend.model.entity.history.EmployeeHistory;
import com.ems.backend.model.repo.UserRepo;
import com.ems.backend.model.repo.history.EmployeeHistoryRepo;
import com.ems.backend.security.jwt.JwtService;
import com.ems.backend.util.exception.ApiBusinessException;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.transaction.Transactional;

@Service
public class EmployeeHistoryListener {

	@Autowired
	private EmployeeHistoryRepo employeeHistoryRepo;
	
	@Autowired
	private UserRepo userRepo;
	
	@Autowired
	private JwtService jwtService;
	
	@Autowired
	private HttpServletRequest httpServletRequest;

	
	@EventListener
	@Transactional
	public void handle(HistoryEmployeeEvent saveEmployeeEvent) {
		
		EmployeeHistory employeeHistory = new EmployeeHistory(
				saveEmployeeEvent.getEmployee(),
				saveEmployeeEvent.getPosition(),
				saveEmployeeEvent.getDepartment(),
				jwtService.extractUsername(getToken()),1);
		
		employeeHistoryRepo.save(employeeHistory);
	}
	
	@EventListener
	@Transactional
	public void handle(Employee employee) {
		int version = employeeHistoryRepo.findMaxVersionByEmployeeId(employee.getId());
		
		System.out.println("version : " + version);
		
		String email = jwtService.extractUsername(getToken());
		EmployeeHistory employeeHistory = new EmployeeHistory(
												employee,
												employee.getPosition_id(),
												employee.getDepartment(),
												email,
												version + 1
											);
		
		employeeHistoryRepo.save(employeeHistory);
	}
	
	@EventListener
	@Transactional
	public void handle(HistoryEmployeeDelete deletedEmployee) {
		int version = employeeHistoryRepo.findMaxVersionByEmployeeId(deletedEmployee.getEmployee().getId());
		
		String email = jwtService.extractUsername(getToken());
		EmployeeHistory employeeHistory = new EmployeeHistory(
												deletedEmployee.getEmployee(),
												deletedEmployee.getEmployee().getPosition_id(),
												deletedEmployee.getEmployee().getDepartment(),
												email + "(deleted)",
												version + 1
											);
		employeeHistoryRepo.save(employeeHistory);
	}
	
	
	private String getToken() {
		
		String header = httpServletRequest.getHeader("Authorization");
		
		if(header != null || header.startsWith("Bearer ")) {
			String token = header.substring(7);
			
			return token;
		}else {
			throw new ApiBusinessException("There is no token in request");
		}
		
	}

	
	
}
