package com.ems.backend.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ems.backend.model.dto.request.EmployeeDto;
import com.ems.backend.model.dto.request.MyUserAccountRegister;
import com.ems.backend.model.dto.response.DynamicSearchDto;
import com.ems.backend.model.dto.response.EmployeeDtoResponse;
import com.ems.backend.model.dto.response.MyUserAccountRegisterRepsonse;
import com.ems.backend.model.response.ApiResponse;
import com.ems.backend.service.EmployeeService;
import com.ems.backend.service.UserService;

@CrossOrigin("*")
@RestController
@RequestMapping("admin")
public class AdminApi {
	
	@Autowired
	private EmployeeService employeeService;
	
	@Autowired
	private UserService userService;


	@PostMapping
	public ApiResponse<EmployeeDtoResponse> createEmployee(@Validated @RequestBody EmployeeDto employeeDto,BindingResult result){
		return ApiResponse.success(employeeService.create(employeeDto));
	}
	
	@GetMapping("{id}")
	public ApiResponse<EmployeeDtoResponse> getEmployeeById(@PathVariable("id") int id){
		return ApiResponse.success(employeeService.getEmployeeById(id));
	}
	
	@GetMapping
	public ApiResponse<List<EmployeeDtoResponse>> getAllEmployee(){
		return ApiResponse.success(employeeService.getAllEmployee());
	}
	
	@PutMapping("{id}")
	public ApiResponse<EmployeeDtoResponse> updateEmployee(@PathVariable("id") int id,@Validated @RequestBody EmployeeDto employeeDto,BindingResult result){
		return ApiResponse.success(employeeService.updateEmployee(id, employeeDto));
	}
	
	@DeleteMapping("{id}")
	public ApiResponse<String> deleteEmployee(@PathVariable("id") int id){
		return ApiResponse.success(employeeService.deleteEmployee(id));
	}
	
	@GetMapping("search/{keyword}")
	public ApiResponse<List<DynamicSearchDto>> searchWithKeyword(@PathVariable("keyword") String keyword){
		return ApiResponse.success(employeeService.search(keyword));
	}
	

	
}










